{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Getting Started","text":"<p>Welcome to the Prompty Cookbook!! This is a living repository of tutorials and samples that help you get hands-on experience with the Prompty open-source project from Microsoft. </p>"},{"location":"#what-is-prompty","title":"What is Prompty?","text":"<p>By definition, Prompty is an asset class and prompt format for generative AI models that brings observability, understandability, and portability, to developers.</p> <ul> <li>Observability - with built-in support for tracing and telemetry capture.</li> <li>Understandability - with Markdown-like syntax that prioritizes readabilty.</li> <li>Portability - language-agnostic asset with language-specific runtimes provided.</li> </ul> <p>The Prompty asset is identified by the <code>.prompty</code> file extension, and has a format that follows this YAML specification. At a high-level, the format describes:</p> <ul> <li>Metadata - frontmatter used to configure models and customize templates</li> <li>Template - content for a prompt's system message, instructions and context.</li> </ul> <p>The Prompty open source project has three core components:</p> <ul> <li>Asset - the <code>.prompty</code> asset that defines an actionable prompt for invocation.</li> <li>Tooling - that helps developers create and manage these assets</li> <li>Runtime - an execution environment that loads &amp; renders the asset, and invokes the model.</li> </ul>"},{"location":"#what-is-this-cookbook","title":"What is this Cookbook?","text":"<p>Prompty is a fairly flexible prompt asset format with an extensible tools and runtime ecosystem. This means that you can get a basic understanding of the project from the documentation, but the best way to build your intuition is through hands-on exploration.</p> <p>This cookbook repository is instrumented with a devcontaner making it an ideal sandbox for trying out examples, then extending or modifying them to understand how changes in model configuration or template content can impact the cost, complexity, and quality, of responses.</p> <p>The integrations section will explore more advanced examples that have additional dependencies (e.g., Azure account) and help you progress from prompt to prototype to production. The best way to use the Cookbook is to launch GitHub Codespaces, run a recipe (to verify it works), then copy it over and customize it to improve on it, or to break it (and then figure out why). If you create something new, consider contributing it back as a PR!</p>"},{"location":"#what-should-i-know","title":"What should I know?","text":"<p>To get started, thes are the pre-requisites:</p> <ol> <li>You must have a personal GitHub account - for Fundamentals.</li> <li>You must have an Azure account for Integrations.</li> <li>Some knowledge of Python, Generative AI, and VS Code, is assumed.</li> <li>Where necessarty, addiitonal pre-requisites may be specified per recipe.</li> </ol>"},{"location":"#what-will-i-learn","title":"What will I learn?","text":"<p>By completing the cookbook in the suggested order, you will be able to:</p> <ol> <li>Explain what a Prompty asset is, and how to create &amp; execute it in VS Code.</li> <li>Explain the Prompty application lifecycle, and how it simplifies dev inner loops.</li> <li>Explain the Prompty tracing feature, and how to analyze generated traces for runs.</li> <li>Use Prompty to engineer prompts and invoke them on diverse model types and targets.</li> <li>Use Prompty in orchestated flows to create more complex applications (e.g., using RAG).</li> <li>Learn how to extend core Prompty compoments to support new runtimes or models.</li> </ol>"},{"location":"#how-do-i-get-started","title":"How do I get started?","text":"<p>We recommend that beginners explore resources in this order:</p> <ol> <li>Concepts - understand Prompty capabilities, tooling, and core components.</li> <li>Models - explore simple Prompty examples to understand model configurations.</li> <li>Integrations - explore complex Prompty examples to understand workflows.</li> </ol> <p>Ready to Dive in? Let's explore core concepts!</p>"},{"location":"1-Concepts/Asset/01/","title":"01 - Create &amp; Run A Prompty","text":"<p>In this exercise, you'll learn to create, configure, and run, your first Prompty asset. </p> <ul> <li>We'll use the Prompty Visual Studio Code extension to create an asset.</li> <li>We'll use the Prompty runtime in VS Code to execute the asset.</li> <li>We'll edit the Prompty asset in VS Code to customize it and run it again.</li> </ul> <p>**This will validate your development environment and give you an intuitive sense for how Prompty works to bring \"the model playground into your code editor\".</p>"},{"location":"1-Concepts/Asset/01/#1-launch-github-codespaces","title":"1. Launch GitHub Codespaces","text":""},{"location":"2-Models/01/","title":"GitHub Models","text":""},{"location":"3-Integrations/01/","title":"Azure Integrations","text":""}]}